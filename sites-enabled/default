
##################### IMAGE RESIZER INTERNAL ########################
server {
    # Internal image resizing server.
    server_name localhost;
    listen 8888;
    server_tokens off;
    root /tmp;  

  location ~ "^/media/c/(?<width>\d+)/(?<height>\d+)/(?<image>.+)$" {
        alias /var/www/html/storage/$image;
        image_filter crop $width $height;
        image_filter_jpeg_quality 80;
        image_filter_buffer 8M;
    }

    location ~ "^/media/r/(?<width>\d+)/(?<height>\d+)/(?<image>.+)$" {
        alias /var/www/html/storage/$image;
        image_filter resize $width -;
        image_filter_jpeg_quality 80;
        image_filter_buffer 8M;
    }
}


proxy_cache_path /tmp/nginx-images-cache/ levels=1:2 keys_zone=images:10m inactive=24h max_size=100m;

################## DEFAULT  ###############################

server{
   server_tokens off;
   listen 80 default_server;
   listen [::]:80 default_server;
   root /tmp;
}

server {
        server_tokens off;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    ssl_certificate      /etc/ssl/private/chained.crt;
    ssl_certificate_key  /etc/ssl/private/v2.pem;
    ssl_dhparam  /etc/ssl/private/dhparams.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_prefer_server_ciphers on;

    root /tmp;

}

################# HTTP FRONT ################################

server {
	listen 80;
	listen [::]:80;
    server_name jauns.president.lv;
	return 301 https://$host$request_uri;
	server_tokens off;
}


#################################### HTTP BACKEND ####################################

server {
	listen 80;
	listen [::]:80;
   	root /var/www/html/backend/web;
    server_name adminjauns.president.lv;
    return 301 https://$host$request_uri;
	server_tokens off;
	
}


######################## SSL FRONT ###########################################

server {
	server_tokens off;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate      /etc/ssl/private/chained.crt;
    ssl_certificate_key  /etc/ssl/private/v2.pem; 
    ssl_dhparam  /etc/ssl/private/dhparams.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_prefer_server_ciphers on;        

    allow 84.237.235.253; #vpk
    allow 84.237.235.252; #vpk
    allow 84.237.235.251; #vpk
    allow 84.237.235.249; #vpk
    allow 159.148.212.155; #squalio
    allow 159.148.212.156; #squalio
    allow 159.148.212.157; #squalio
    allow 159.148.212.158; #squalio
    allow 92.63.86.41; #wd office
    allow 77.219.15.161; #raitis home 
    allow 46.109.64.91; #andis home
    allow 213.226.141.102; #serz mobile
    deny all;

    client_max_body_size 8M;
    root /var/www/html/frontend/web;


    server_name jauns.president.lv;

    set $yii_bootstrap "index.php";
    charset utf-8;
    index index.php index.html index.htm;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    location ~ "^/storage/(?<path>.+)$" {
        alias /var/www/html/storage/$path;
    }

    location ~ "^/media/(?<action>\w+)/(?<width>\d+)/(?<height>\d+)/(?<image>.+)$" {
        # Proxy to internal image resizing server.
        proxy_pass http://localhost:8888/media/$action/$width/$height/$image;
        proxy_cache images;
        proxy_cache_valid 200 24h;
    }

    location /media {
        # Nginx needs you to manually define DNS resolution when using
        # variables in proxy_pass. Creating this dummy location avoids that.
        # The error is: "no resolver defined to resolve localhost".
        proxy_pass http://localhost:8888/;
    }

    location / {
        try_files $uri $uri/ /$yii_bootstrap?$args;
    }
 

    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
            try_files $uri =404;
    }


    location ~ \.php$ {
            try_files $uri =404;
            fastcgi_pass unix:/run/php/php7.0-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_connect_timeout     30s;
            fastcgi_read_timeout        120s;
            fastcgi_send_timeout        120s;            
            include fastcgi_params;
            include fastcgi.conf;
    }

    location ~ /\.ht {
        deny all;
    }

    
}

################################### SSL BACKEND #############################

server {
	server_tokens off;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate      /etc/ssl/private/chained.crt;
    ssl_certificate_key  /etc/ssl/private/v2.pem;  


    client_max_body_size 32M;
    root /var/www/html/backend/web;


    server_name adminjauns.president.lv;

    allow 84.237.235.253; #vpk
    allow 84.237.235.252;
    allow 84.237.235.251;
    allow 84.237.235.249;
    allow 159.148.212.155;
    allow 159.148.212.156;
    allow 159.148.212.157;
    allow 159.148.212.158; #squalio
    allow 92.63.86.41;
    allow 77.219.15.161; #raitis home
    allow 46.109.64.91; #andis home 
    allow 213.226.141.102; #serz mobile
    deny all;


    set $yii_bootstrap "index.php";
    charset utf-8;
    index index.php;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Cache-Control "must-revalidate, no-cache, no-store, pre-check=0, postcheck=0, max-age=0, s-maxage=0";


    location / {
        try_files $uri $uri/ /$yii_bootstrap?$args;
    }

    location ~ "^/storage/(?<path>.+)$" {
            alias /var/www/html/storage/$path;
    }

    location ~ "^/media/(?<action>\w+)/(?<width>\d+)/(?<height>\d+)/(?<image>.+)$" {
        # Proxy to internal image resizing server.
        proxy_pass http://localhost:8888/media/$action/$width/$height/$image;
        proxy_cache images;
        proxy_cache_valid 200 24h;
    }

    location /media {
        # Nginx needs you to manually define DNS resolution when using
        # variables in proxy_pass. Creating this dummy location avoids that.
        # The error is: "no resolver defined to resolve localhost".
        proxy_pass http://localhost:8888/;
    }    


    location ~ \.(js|css|png|jpg|gif|svg|swf|ico|pdf|mov|fla|zip|rar)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
        try_files $uri =404;
    }


    location ~ \.php$ {
            try_files $uri =404;
            fastcgi_pass unix:/run/php/php7.0-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    #fastcgi_param PHP_VALUE open_basedir="/var/www/html"
            fastcgi_connect_timeout     30s;
            fastcgi_read_timeout        120s;
            fastcgi_send_timeout        120s;            
            include fastcgi_params;
            include fastcgi.conf;
    }


    location ~ /\.ht {
        deny all;
    }

    
}
